name: CI/CD

on:
  push:
    branches:
      - main
      - prod
      - "*" # for testing

concurrency:
  cancel-in-progress: true
  group: ${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup cargo cache
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-
            cargo-

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
          target: wasm32-unknown-unknown

      - name: Install worker-build
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: install
          args: --bins worker-build

      - name: Build
        run: worker-build --dev

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            ./target
            ./build
            ./dist

  # TODO Add deploy stage

  deploy:
    runs-on: ubuntu-latest
    environment: prod
    needs:
      - build

    # Only run the CD if a push to the prod branch triggered the action.
    #if: github.ref_name == 'prod' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup cargo cache
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-
            cargo-

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
          target: wasm32-unknown-unknown

      - name: Install worker-build
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: install
          args: --bins worker-build

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Build release using worker-build
        run: worker-build --release

      # TODO Replace with yarn provided wrangler?
#      - name: Publish
#        uses: cloudflare/wrangler-action@2.0.0
#        with:
#          apiToken: ${{ secrets.CF_API_TOKEN }}
#          wranglerVersion: "2.0.25"
#          environment: "prod"
