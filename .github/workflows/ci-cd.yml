name: CI/CD

on:
  push:
    branches:
      - "prod"
      - "*"

concurrency:
  cancel-in-progress: true
  group: ${{ github.ref }}

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Setup cargo cache
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install worker-build
        uses: baptiste0928/cargo-install@v1
        with:
          crate: worker-build

      - name: Setup NodeJS for yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install yarn dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Checkout
        uses: actions/checkout@v3

      # Replace with worker-build or wrangler-build?
      - name: Build
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            target\
            build\
            dist\

      - name: Run tests
        run: cargo test --verbose

  deploy:
    name: Deploy to Cloudflare Workers
    runs-on: ubuntu-latest
    environment: prod
    needs:
      - build

    # Only run the CD if a push to the prod branch triggered the action.
    #if: github.ref_name == 'prod' && github.event_name == 'push'

    steps:
      - name: Setup cargo cache
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install worker-build
        uses: baptiste0928/cargo-install@v1
        with:
          crate: worker-build

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Build release using worker-build
        run: worker-build --release


      # TODO Replace with yarn provided wrangler?
#      - name: Publish
#        uses: cloudflare/wrangler-action@2.0.0
#        with:
#          apiToken: ${{ secrets.CF_API_TOKEN }}
#          wranglerVersion: "2.0.25"
#          environment: "prod"
